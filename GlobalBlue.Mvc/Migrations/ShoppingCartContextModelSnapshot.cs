// <auto-generated />
using GlobalBlue.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using System;

namespace GlobalBlue.Mvc.Migrations
{
    [DbContext(typeof(ShoppingCartContext))]
    partial class ShoppingCartContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("GlobalBlue.Models.CartDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ShoppingCartId");

                    b.HasKey("Id");

                    b.HasIndex("ShoppingCartId")
                        .IsUnique();

                    b.ToTable("CartDetails");
                });

            modelBuilder.Entity("GlobalBlue.Models.ContactDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Handphone");

                    b.Property<string>("Landline");

                    b.Property<int>("ShoppingCartId");

                    b.HasKey("Id");

                    b.HasIndex("ShoppingCartId")
                        .IsUnique();

                    b.ToTable("ContactDetails");
                });

            modelBuilder.Entity("GlobalBlue.Models.HomeAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<int>("ShippingDetailsId");

                    b.Property<string>("StreetAddress1");

                    b.Property<string>("StreetAddress2");

                    b.Property<string>("StreetAddress3");

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.HasIndex("ShippingDetailsId")
                        .IsUnique();

                    b.ToTable("HomeAddress");
                });

            modelBuilder.Entity("GlobalBlue.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CartDetailsId");

                    b.Property<string>("ItemId");

                    b.Property<int?>("Qty");

                    b.HasKey("Id");

                    b.HasIndex("CartDetailsId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("GlobalBlue.Models.OfficeAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<int>("ShippingDetailsId");

                    b.Property<string>("StreetAddress1");

                    b.Property<string>("StreetAddress2");

                    b.Property<string>("StreetAddress3");

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.HasIndex("ShippingDetailsId")
                        .IsUnique();

                    b.ToTable("OfficeAddress");
                });

            modelBuilder.Entity("GlobalBlue.Models.ShippingDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ShoppingCartId");

                    b.HasKey("Id");

                    b.HasIndex("ShoppingCartId")
                        .IsUnique();

                    b.ToTable("ShippingDetails");
                });

            modelBuilder.Entity("GlobalBlue.Models.ShoppingCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("ShoppingCart");
                });

            modelBuilder.Entity("GlobalBlue.Models.CartDetails", b =>
                {
                    b.HasOne("GlobalBlue.Models.ShoppingCart")
                        .WithOne("CartDetails")
                        .HasForeignKey("GlobalBlue.Models.CartDetails", "ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GlobalBlue.Models.ContactDetails", b =>
                {
                    b.HasOne("GlobalBlue.Models.ShoppingCart")
                        .WithOne("ContactDetails")
                        .HasForeignKey("GlobalBlue.Models.ContactDetails", "ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GlobalBlue.Models.HomeAddress", b =>
                {
                    b.HasOne("GlobalBlue.Models.ShippingDetails")
                        .WithOne("HomeAddress")
                        .HasForeignKey("GlobalBlue.Models.HomeAddress", "ShippingDetailsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GlobalBlue.Models.Item", b =>
                {
                    b.HasOne("GlobalBlue.Models.CartDetails")
                        .WithMany("Items")
                        .HasForeignKey("CartDetailsId");
                });

            modelBuilder.Entity("GlobalBlue.Models.OfficeAddress", b =>
                {
                    b.HasOne("GlobalBlue.Models.ShippingDetails")
                        .WithOne("OfficeAddress")
                        .HasForeignKey("GlobalBlue.Models.OfficeAddress", "ShippingDetailsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GlobalBlue.Models.ShippingDetails", b =>
                {
                    b.HasOne("GlobalBlue.Models.ShoppingCart")
                        .WithOne("ShippingDetails")
                        .HasForeignKey("GlobalBlue.Models.ShippingDetails", "ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
